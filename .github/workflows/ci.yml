name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME}}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  DOCKER_IMAGE_NAME: rssagg_app
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USER: ${{ secrets.USER_NAME }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Проверяем код из репозитория
      - name: Checkout repository
        uses: actions/checkout@v2

      # Устанавливаем Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Расшифровываем .env
      - name: Decrypt .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      # Логинимся в Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Строим Docker образ
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME:$GITHUB_SHA .

      # Пушим образ в Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME:$GITHUB_SHA

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Настройка SSH для деплоя на сервер
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      # Обновляем контейнеры на удаленном серверe
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p ~/rssagg
            cd ~/rssagg
            docker-compose pull
            docker-compose down
            docker-compose up -d --build
